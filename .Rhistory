future <- make_future_dataframe(m, periods = 18, freq = "day")
future$cap <- max(df$cap)
fcst <- predict(m, future)
plot(m, fcst)
m <- prophet(df, growth = "linear", daily.seasonality = T)
future <- make_future_dataframe(m, periods = 18, freq = "day")
future$cap <- max(df$cap)
fcst <- predict(m, future)
plot(m, fcst)
?prophet
df_corona %>%
filter(CountryOrRegion = "Italy")
df_corona %>%
filter(CountryOrRegion == "Italy")
df <- df_corona %>%
filter(CountryOrRegion == "Italy") %>%
group_by(ObservationDate) %>% summarise_if(is.numeric, sum) %>%
select(ds = ObservationDate,
y = Confirmed)
AVG_NEW_CONTACT <- 1.3
df$cap <- df$y * AVG_NEW_CONTACT
m <- prophet(df, growth = "linear", daily.seasonality = T)
future <- make_future_dataframe(m, periods = 18, freq = "day")
future$cap <- max(df$cap)
fcst <- predict(m, future)
plot(m, fcst)
m <- prophet(df, growth = "logistic", daily.seasonality = T)
future <- make_future_dataframe(m, periods = 18, freq = "day")
future$cap <- max(df$cap)
fcst <- predict(m, future)
plot(m, fcst)
max(df$cap)
df$cap <- 1000000#df$y * AVG_NEW_CONTACT
m <- prophet(df, growth = "logistic", daily.seasonality = T)
future$cap <- 1000000
fcst <- predict(m, future)
plot(m, fcst)
df$cap <- 100000#df$y * AVG_NEW_CONTACT
m <- prophet(df, growth = "logistic", daily.seasonality = T)
future <- make_future_dataframe(m, periods = 18, freq = "day")
future$cap <- 1000000
fcst <- predict(m, future)
plot(m, fcst)
future$cap <- 100000
fcst <- predict(m, future)
plot(m, fcst)
AVG_NEW_CONTACT <- 3
df$cap <- df$y * AVG_NEW_CONTACT
m <- prophet(df, growth = "logistic", daily.seasonality = T)
future <- make_future_dataframe(m, periods = 18, freq = "day")
future$cap <- 100000
fcst <- predict(m, future)
plot(m, fcst)
AVG_NEW_CONTACT <- 10
df$cap <- df$y * AVG_NEW_CONTACT
m <- prophet(df, growth = "logistic", daily.seasonality = T)
future <- make_future_dataframe(m, periods = 18, freq = "day")
future$cap <- 100000
fcst <- predict(m, future)
plot(m, fcst)
max(df$cap)
AVG_NEW_CONTACT <- 5
df$cap <- df$y * AVG_NEW_CONTACT
m <- prophet(df, growth = "logistic", daily.seasonality = T)
future <- make_future_dataframe(m, periods = 18, freq = "day")
future$cap <- max(df$cap)
fcst <- predict(m, future)
plot(m, fcst)
df$y** AVG_NEW_CONTACT
AVG_NEW_CONTACT <- 1.5
df$cap <- df$y**AVG_NEW_CONTACT
m <- prophet(df, growth = "logistic", daily.seasonality = T)
future <- make_future_dataframe(m, periods = 18, freq = "day")
future$cap <- max(df$cap)
fcst <- predict(m, future)
plot(m, fcst)
AVG_NEW_CONTACT <- 0.5
df$cap <- df$y**AVG_NEW_CONTACT
m <- prophet(df, growth = "logistic", daily.seasonality = T)
future <- make_future_dataframe(m, periods = 18, freq = "day")
future$cap <- max(df$cap)
fcst <- predict(m, future)
plot(m, fcst)
AVG_NEW_CONTACT <- 0.5
df$cap <- df$y**AVG_NEW_CONTACT
m <- prophet(df, growth = "logistic")
future <- make_future_dataframe(m, periods = 18, freq = "day")
future$cap <- max(df$cap)
fcst <- predict(m, future)
plot(m, fcst)
AVG_NEW_CONTACT <- 1
df$cap <- df$y**AVG_NEW_CONTACT
m <- prophet(df, growth = "logistic", )
future <- make_future_dataframe(m, periods = 18, freq = "day")
future$cap <- max(df$cap)
fcst <- predict(m, future)
plot(m, fcst)
AVG_NEW_CONTACT <- 1.2
df$cap <- df$y**AVG_NEW_CONTACT
m <- prophet(df, growth = "logistic", )
future <- make_future_dataframe(m, periods = 18, freq = "day")
future$cap <- max(df$cap)
fcst <- predict(m, future)
plot(m, fcst)
AVG_NEW_CONTACT <- 0.2
df$cap <- df$y**AVG_NEW_CONTACT
m <- prophet(df, growth = "logistic", )
future <- make_future_dataframe(m, periods = 18, freq = "day")
future$cap <- max(df$cap)
fcst <- predict(m, future)
plot(m, fcst)
CAP <- 100000
df$cap <- CAP
future$cap <- max(df$cap)
fcst <- predict(m, future)
plot(m, fcst)
CAP <- 100000
df$cap <- CAP
m <- prophet(df, growth = "logistic")
future <- make_future_dataframe(m, periods = 18, freq = "day")
future$cap <- max(df$cap)
fcst <- predict(m, future)
plot(m, fcst)
CAP <- 10000
df$cap <- CAP
m <- prophet(df, growth = "logistic")
future <- make_future_dataframe(m, periods = 18, freq = "day")
future$cap <- max(df$cap)
fcst <- predict(m, future)
plot(m, fcst)
CAP <- 100000
df$cap <- CAP
m <- prophet(df, growth = "logistic")
future <- make_future_dataframe(m, periods = 18, freq = "day")
future$cap <- max(df$cap)
fcst <- predict(m, future)
plot(m, fcst)
df_corona %>%
filter(CountryOrRegion %LIKE% "Italy")
df_corona %>%
filter(str_match(CountryOrRegion, "Italy"))
df_corona %>%
filter(str_detect(CountryOrRegion, "Italy"))
?str_detect
df_corona %>%
filter(str_detect(CountryOrRegion, "Italy", ignore_case=TRUE))
df_corona %>%
filter(stringr::str_detect(CountryOrRegion, "Italy", ignore_case=TRUE))
df_corona %>%
filter(str_detect(CountryOrRegion, "(?i)Italy"))
data(world.cities)
wbstats
library(wbstats)
pacman::p_load(
tidyverse,
lubridate,
prophet,
wbstats)
##----------------------------------------------------------------------------##
## Country-Wise population ####
##----------------------------------------------------------------------------##
df_corona %>% distinct(CountryOrRegion)
wb(country = c("ABW","AF", "SSF", "ECA", "NOC"),
indicator = "SP.POP.TOTL", startdate = 2012, enddate = 2012)
wb(country = df_corona %>% distinct(CountryOrRegion),
indicator = "SP.POP.TOTL", startdate = 2012, enddate = 2012)
##----------------------------------------------------------------------------##
## Country-Wise population ####
##----------------------------------------------------------------------------##
df_corona %>% distinct(CountryOrRegion) %>% pluck(1)
wb(country = countries,
indicator = "SP.POP.TOTL", startdate = 2012, enddate = 2012)
wb(country %in% countries,
indicator = "SP.POP.TOTL", startdate = 2012, enddate = 2012)
##----------------------------------------------------------------------------##
## Country-Wise population ####
##----------------------------------------------------------------------------##
countries <- df_corona %>% distinct(CountryOrRegion) %>% pluck(1)
countries
c("ABW","AF", "SSF", "ECA", "NOC")
wb(country = c("ABW","AF", "SSF", "ECA", "NOC"),
indicator = "SP.POP.TOTL", startdate = 2012, enddate = 2012)
wb(country = countries,#c("ABW","AF", "SSF", "ECA", "NOC"),
indicator = "SP.POP.TOTL", startdate = 2012, enddate = 2012)
wb(indicator = "SP.POP.TOTL", startdate = 2012, enddate = 2012)
wb(indicator = "SP.POP.TOTL", startdate = 2012, enddate = 2012) %>%
select(iso3c, population = value, country)
wb(indicator = "SP.POP.TOTL", startdate = 2012, enddate = 2012) %>%
select(iso3c, population = value, country) %>% arrange(country)
wb(indicator = "SP.POP.TOTL", startdate = 2012, enddate = 2012) %>%
select(iso3c, population = value, country) %>%
right_join(countries, by = c("country" = "CountryOrRegion"))
##----------------------------------------------------------------------------##
## Country-Wise population ####
##----------------------------------------------------------------------------##
countries <- df_corona %>% distinct(CountryOrRegion)
wb(indicator = "SP.POP.TOTL", startdate = 2012, enddate = 2012) %>%
select(iso3c, population = value, country) %>%
right_join(countries, by = c("country" = "CountryOrRegion"))
wb(indicator = "SP.POP.TOTL", startdate = 2012, enddate = 2012) %>%
select(iso3c, population = value, country) %>%
right_join(countries, by = c("country" = "CountryOrRegion")) %>%
arrange(country)
countries %>% mutate(corona_df_name = CountryOrRegion,
wb_df_name = CountryOrRegion)
wb(indicator = "SP.POP.TOTL", startdate = 2018, enddate = 2018) %>%
select(iso3c, population = value, country)
wb(indicator = "SP.POP.TOTL", startdate = 2020, enddate = 2020) %>%
select(iso3c, population = value, country)
wb(indicator = "SP.POP.TOTL", startdate = 2019, enddate = 2019) %>%
select(iso3c, population = value, country)
wb(indicator = "SP.POP.TOTL", startdate = 2018, enddate = 2018) %>%
select(iso3c, population = value, country)
world_population <- wb(indicator = "SP.POP.TOTL", startdate = 2018, enddate = 2018) %>%
select(iso3c, population = value, country)
world_population
countries %>% left_join(world_population,
by = c("wb_df_name" = "country"))
countries
##----------------------------------------------------------------------------##
## Country-Wise population ####
##----------------------------------------------------------------------------##
countries <- df_corona %>% distinct(CountryOrRegion)
countries <- countries %>% mutate(corona_df_name = CountryOrRegion,
wb_df_name = CountryOrRegion)
world_population <- wb(indicator = "SP.POP.TOTL", startdate = 2018, enddate = 2018) %>%
select(iso3c, population = value, country)
countries %>% left_join(world_population,
by = c("wb_df_name" = "country"))
df_population <- countries %>% left_join(world_population,
by = c("wb_df_name" = "country"))
df_population
world_population <- wb(indicator = "SP.POP.TOTL", startdate = 2018, enddate = 2018) %>%
select(iso3c, country)
world_population
df_population <- countries %>% left_join(world_population,
by = c("wb_df_name" = "country"))
df_population
world_population
View(world_population)
df_population[df_population$CountryOrRegion == "Mainland China", "iso3c"] = "CHN"
df_population
df_population[df_population$CountryOrRegion == "Hong Kong", "iso3c"] = "HKG"
df_population
world_population <- wb(indicator = "SP.POP.TOTL", startdate = 2017, enddate = 2017) %>%
select(iso3c, country)
world_population
View(world_population)
df_population
df_population[df_population$CountryOrRegion == "Mainland China", "iso3c"] = "CHN"
df_population[df_population$CountryOrRegion == "Hong Kong", "iso3c"] = "HKG"
df_population[df_population$CountryOrRegion == "Macau", "iso3c"] = "MAC"
df_population
df_population[df_population$CountryOrRegion == "Mainland China", "iso3c"] = "CHN"
df_population[df_population$CountryOrRegion == "Hong Kong", "iso3c"] = "HKG"
df_population[df_population$CountryOrRegion == "Macau", "iso3c"] = "MAC"
df_population[df_population$CountryOrRegion == "US", "iso3c"] = "USA"
df_population[df_population$CountryOrRegion == "South Korea", "iso3c"] = "KOR"
df_population
df_population %>% filter(is.na)
df_population %>% filter(is.na())
df_population %>% filter(is.na(iso3c))
df_population[df_population$CountryOrRegion == "Mainland China", "iso3c"] = "CHN"
df_population[df_population$CountryOrRegion == "Hong Kong", "iso3c"] = "HKG"
df_population[df_population$CountryOrRegion == "Macau", "iso3c"] = "MAC"
df_population[df_population$CountryOrRegion == "US", "iso3c"] = "USA"
df_population[df_population$CountryOrRegion == "South Korea", "iso3c"] = "KOR"
df_population[df_population$CountryOrRegion == "Ivory Coast", "iso3c"] = "CIV"
df_population[df_population$CountryOrRegion == "UK", "iso3c"] = "GBR"
df_population[df_population$CountryOrRegion == "Egypt", "iso3c"] = "EGY"
df_population[df_population$CountryOrRegion == "Iran", "iso3c"] = "IRN"
df_population[df_population$CountryOrRegion == "Saint Barthelemy", "iso3c"] = "BLM"
df_population[df_population$CountryOrRegion == "Palestine", "iso3c"] = "PSE"
df_population[df_population$CountryOrRegion == "Saint Barthelemy", "iso3c"] = "BLM"
df_population %>% filter(is.na(iso3c))
df_population[df_population$CountryOrRegion == "French Guiana", "iso3c"] = "GUF"
df_population[df_population$CountryOrRegion == "Martinique", "iso3c"] = "MTQ"
df_population[df_population$CountryOrRegion == "Republic of Ireland ", "iso3c"] = "IRL"
df_population[df_population$CountryOrRegion == "St. Martin", "iso3c"] = "MAF"
df_population[df_population$CountryOrRegion == "Brunei", "iso3c"] = "BRN"
df_population[df_population$CountryOrRegion == "Holy See", "iso3c"] = "VAT"
df_population %>% filter(is.na(iso3c))
df_population[df_population$CountryOrRegion == "Republic of Ireland", "iso3c"] = "IRL"
df_population %>% filter(is.na(iso3c))
df_population[df_population$CountryOrRegion == "Congo (Kinshasa)", "iso3c"] = "COD"
df_population[df_population$CountryOrRegion == "Russia", "iso3c"] = "RUS"
df_population %>% filter(is.na(iso3c))
df_population[df_population$CountryOrRegion == "Reunion", "iso3c"] = "REU"
df_population %>% filter(is.na(iso3c))
df_population[df_population$CountryOrRegion == "Slovakia", "iso3c"] = "SVK"
df_population[df_population$CountryOrRegion == "French Guiana", "iso3c"] = "GUF"
df_population[df_population$CountryOrRegion == "Martinique", "iso3c"] = "MTQ"
df_population[df_population$CountryOrRegion == "Republic of Ireland", "iso3c"] = "IRL"
df_population[df_population$CountryOrRegion == "St. Martin", "iso3c"] = "MAF"
df_population[df_population$CountryOrRegion == "Brunei", "iso3c"] = "BRN"
df_population[df_population$CountryOrRegion == "Holy See", "iso3c"] = "VAT"
df_population[df_population$CountryOrRegion == "Reunion", "iso3c"] = "REU"
df_population[df_population$CountryOrRegion == "Slovakia", "iso3c"] = "SVK"
df_population[df_population$CountryOrRegion == "Congo (Kinshasa)", "iso3c"] = "COD"
df_population[df_population$CountryOrRegion == "Reunion", "iso3c"] = "REU"
df_population %>% filter(is.na(iso3c))
df_corona
df_corona %>% filter(CountryOrRegion == "Taiwan")
df_corona %>% filter(CountryOrRegion == "Taiwan") %>% sum(Confirmed)
df_corona %>% filter(CountryOrRegion == "Taiwan") %>% .$Confirmed
df_corona %>% filter(CountryOrRegion == "Taiwan") %>% .$Confirmed
df_population %>% filter(is.na(iso3c))
df_population
world_population <- wb(indicator = "SP.POP.TOTL", startdate = 2017, enddate = 2017) %>%
select(iso3c, country, population = value)
world_population
df_population <- countries %>% left_join(world_population,
by = c("wb_df_name" = "country"))
df_population[df_population$CountryOrRegion == "Mainland China", "iso3c"] = "CHN"
df_population
df_population[df_population$CountryOrRegion == "Mainland China", "iso3c"] = "CHN"
df_population[df_population$CountryOrRegion == "Hong Kong", "iso3c"] = "HKG"
df_population[df_population$CountryOrRegion == "Macau", "iso3c"] = "MAC"
df_population[df_population$CountryOrRegion == "US", "iso3c"] = "USA"
df_population[df_population$CountryOrRegion == "South Korea", "iso3c"] = "KOR"
df_population[df_population$CountryOrRegion == "Ivory Coast", "iso3c"] = "CIV"
df_population[df_population$CountryOrRegion == "UK", "iso3c"] = "GBR"
df_population[df_population$CountryOrRegion == "Egypt", "iso3c"] = "EGY"
df_population[df_population$CountryOrRegion == "Iran", "iso3c"] = "IRN"
df_population[df_population$CountryOrRegion == "Saint Barthelemy", "iso3c"] = "BLM"
df_population[df_population$CountryOrRegion == "Palestine", "iso3c"] = "PSE"
df_population[df_population$CountryOrRegion == "Russia", "iso3c"] = "RUS"
df_population[df_population$CountryOrRegion == "Slovakia", "iso3c"] = "SVK"
df_population[df_population$CountryOrRegion == "French Guiana", "iso3c"] = "GUF"
df_population[df_population$CountryOrRegion == "Martinique", "iso3c"] = "MTQ"
df_population[df_population$CountryOrRegion == "Republic of Ireland", "iso3c"] = "IRL"
df_population[df_population$CountryOrRegion == "St. Martin", "iso3c"] = "MAF"
df_population[df_population$CountryOrRegion == "Brunei", "iso3c"] = "BRN"
df_population[df_population$CountryOrRegion == "Holy See", "iso3c"] = "VAT"
df_population[df_population$CountryOrRegion == "Reunion", "iso3c"] = "REU"
df_population[df_population$CountryOrRegion == "Slovakia", "iso3c"] = "SVK"
df_population[df_population$CountryOrRegion == "Congo (Kinshasa)", "iso3c"] = "COD"
df_population[df_population$CountryOrRegion == "Reunion", "iso3c"] = "REU"
df_population
df_population %>% left_join(world_population,
by = c("iso3c"))
df_population %>% left_join(world_population,
by = c("iso3c")) %>%
select(CountryOrRegion, iso3c, population = population.y)
df_corona %>% group_by(ObservationDate) %>% summarise_if(is.numeric, sum) %>%
ggplot(aes(x = ObservationDate, y = Confirmed, color = )) +
geom_line() +
theme_minimal()
df_population
df_population %>% left_join(world_population,
by = c("iso3c")) %>%
select(CountryOrRegion, iso3c, population = population.y)
df_population <- df_population %>% left_join(world_population,
by = c("iso3c")) %>%
select(CountryOrRegion, iso3c, population = population.y)
df_population
df <- df_corona %>%
filter(str_detect(CountryOrRegion, "(?i)Italy")) %>%
group_by(ObservationDate) %>% summarise_if(is.numeric, sum) %>%
select(ds = ObservationDate,
y = Confirmed)
df
df_corona
df_population
df_corona
df_corona %>% left_join(df_population, by = c("CountryOrRegion"))
df_corona <- df_corona %>% left_join(df_population, by = c("CountryOrRegion"))
df_corona
df <- df_corona %>%
filter(str_detect(CountryOrRegion, "(?i)Italy")) %>%
group_by(ObservationDate) %>% summarise_if(is.numeric, sum) %>%
select(ds = ObservationDate,
y = Confirmed)
df
df_corona
df_corona %>%
filter(str_detect(CountryOrRegion, "(?i)Italy"))
country <- "ITA"
df_corona %>%
filter(str_detect(iso3c, country))
df_corona %>%
filter(str_detect(iso3c, country)) %>% distinct(population)
CAP <- df_corona %>% filter(str_detect(iso3c, country)) %>%
distinct(population) %>% pluck(1)
CAP
df$cap <- CAP
m <- prophet(df, growth = "logistic")
future <- make_future_dataframe(m, periods = 18, freq = "day")
future$cap <- max(df$cap)
fcst <- predict(m, future)
plot(m, fcst)
df$cap <- CAP * 0.2
m <- prophet(df, growth = "logistic")
future <- make_future_dataframe(m, periods = 18, freq = "day")
future$cap <- max(df$cap)
fcst <- predict(m, future)
plot(m, fcst)
df$cap <- CAP * 0.1
m <- prophet(df, growth = "logistic")
future <- make_future_dataframe(m, periods = 18, freq = "day")
future$cap <- max(df$cap)
fcst <- predict(m, future)
plot(m, fcst)
data(world.cities)
df$cap <- CAP * 0.01
m <- prophet(df, growth = "logistic")
future <- make_future_dataframe(m, periods = 18, freq = "day")
future$cap <- max(df$cap)
fcst <- predict(m, future)
plot(m, fcst)
future <- make_future_dataframe(m, periods = 7, freq = "day")
future$cap <- max(df$cap)
fcst <- predict(m, future)
plot(m, fcst)
df_corona
max(df_corona$Confirmed)
today_count/population
population <- df_corona %>% filter(str_detect(iso3c, country)) %>%
distinct(population) %>% pluck(1)
today_count <- max(df_corona$Confirmed)
today_count/population
today_count/population * 10
today_count/population
(population - today_count)/population
country <- "CHN"
df_corona %>%
filter(str_detect(iso3c, country)) %>% distinct(population)
df <- df_corona %>%
filter(str_detect(iso3c, country)) %>%
group_by(ObservationDate) %>% summarise_if(is.numeric, sum) %>%
select(ds = ObservationDate,
y = Confirmed)
population <- df_corona %>% filter(str_detect(iso3c, country)) %>%
distinct(population) %>% pluck(1)
population
today_count <- max(df_corona$Confirmed)
today_count
(population - today_count)/population
df_corona
population
today_count
#df$cap <- (population - today_count)/population * 10
df$cap <- today_count * 2.5
m <- prophet(df, growth = "logistic")
future <- make_future_dataframe(m, periods = 7, freq = "day")
future$cap <- max(df$cap)
fcst <- predict(m, future)
plot(m, fcst)
country <- "ITA"
df_corona %>%
filter(str_detect(iso3c, country)) %>% distinct(population)
df <- df_corona %>%
filter(str_detect(iso3c, country)) %>%
group_by(ObservationDate) %>% summarise_if(is.numeric, sum) %>%
select(ds = ObservationDate,
y = Confirmed)
population <- df_corona %>% filter(str_detect(iso3c, country)) %>%
distinct(population) %>% pluck(1)
today_count <- max(df_corona$Confirmed)
#df$cap <- (population - today_count)/population * 10
df$cap <- today_count * 2.5
m <- prophet(df, growth = "logistic")
future <- make_future_dataframe(m, periods = 7, freq = "day")
future$cap <- max(df$cap)
fcst <- predict(m, future)
plot(m, fcst)
df$cap
#df$cap <- (population - today_count)/population * 10
df$cap <- as.integer(today_count * 2.5)
m <- prophet(df, growth = "logistic")
future <- make_future_dataframe(m, periods = 7, freq = "day")
future$cap <- max(df$cap)
fcst <- predict(m, future)
plot(m, fcst)
plot(m, fcst, plot_cap = F)
country <- "CHN"
df_corona %>%
filter(str_detect(iso3c, country)) %>% distinct(population)
df <- df_corona %>%
filter(str_detect(iso3c, country)) %>%
group_by(ObservationDate) %>% summarise_if(is.numeric, sum) %>%
select(ds = ObservationDate,
y = Confirmed)
population <- df_corona %>% filter(str_detect(iso3c, country)) %>%
distinct(population) %>% pluck(1)
today_count <- max(df_corona$Confirmed)
#df$cap <- (population - today_count)/population * 10
df$cap <- as.integer(today_count * 2.5)
m <- prophet(df, growth = "logistic")
future <- make_future_dataframe(m, periods = 7, freq = "day")
future$cap <- max(df$cap)
fcst <- predict(m, future)
plot(m, fcst, plot_cap = F)
plot(m, fcst, plot_cap = F)
country <- "IND"
df_corona %>%
filter(str_detect(iso3c, country)) %>% distinct(population)
df <- df_corona %>%
filter(str_detect(iso3c, country)) %>%
group_by(ObservationDate) %>% summarise_if(is.numeric, sum) %>%
select(ds = ObservationDate,
y = Confirmed)
population <- df_corona %>% filter(str_detect(iso3c, country)) %>%
distinct(population) %>% pluck(1)
today_count <- max(df_corona$Confirmed)
#df$cap <- (population - today_count)/population * 10
df$cap <- as.integer(today_count * 2.5)
m <- prophet(df, growth = "logistic")
future <- make_future_dataframe(m, periods = 7, freq = "day")
future$cap <- max(df$cap)
fcst <- predict(m, future)
plot(m, fcst, plot_cap = F)
